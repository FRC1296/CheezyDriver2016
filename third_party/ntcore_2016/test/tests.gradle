apply plugin: 'google-test'

model {
    testSuites {
        ntcoreTest {
            if (!project.hasProperty('skipJava')) {
                setupJniIncludes(binaries)
            }
            sources {
                cpp {
                    source {
                        srcDirs = ['../test/unit']
                        includes = ['**/*.cpp']
                    }
                    exportedHeaders {
                        srcDirs = ['../include', '../src', '../gmock/include', '../gmock/gtest/include']
                        includes = ['**/*.h']
                    }
                }
            }
            binaries.all {
                lib project: ':gmock', library: 'gmock', linkage: 'static'
                lib library: 'ntcore', linkage: 'static'
            }
        }
    }
}

binaries.withType(GoogleTestTestSuiteBinarySpec) {
    lib project: ':gmock', library: "gmock", linkage: "static"
    lib library: 'ntcore', linkage: 'static'
    if (targetPlatform.operatingSystem.windows) {
        cppCompiler.args '/EHsc', '/DNOMINMAX', '/D_SCL_SECURE_NO_WARNINGS', '/D_WINSOCK_DEPRECATED_NO_WARNINGS'
    } else {
        cppCompiler.args '-pthread', '-std=c++1y'
        linker.args '-pthread'
    }
}
